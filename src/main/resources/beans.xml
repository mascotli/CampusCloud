<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd 
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 加载数据库参数 -->
	<context:property-placeholder
		location="classpath:db.properties" ignore-resource-not-found="false" />
	<!-- 配置连接池 -->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="initialPoolSize"
			value="${jdbc.initialPoolSize}"></property>
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>
	</bean>

	<!-- 配置Hibernate的SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
				hibernate.show_sql=false
				hibernate.format_sql=true
				hibernate.hbm2ddl.auto=update
				hibernate.connection.isolation=4
			</value>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.mascot.campuscloud.dao.entity</value>
			</list>
		</property>
	</bean>

	<!-- 配置MyBatis的SqlSessionFactory -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations"
			value="classpath:mybatis/*.xml" />
		<property name="typeAliasesPackage"
			value="com.mascot.campuscloud.dao.entity" />
		<property name="configuration">
			<bean class="org.apache.ibatis.session.Configuration">
				<property name="mapUnderscoreToCamelCase" value="false" />
			</bean>
		</property>
	</bean>
	<!-- 使用MapperFactoryBean不需要为DAO接口提供实现（将会与HibernateImpl产生冲突，抛NoUniqueBean异常） 
		<bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> 
		<property name="mapperInterface" value="com.mascot.campuscloud.dao.UserDAO" 
		/> <property name="sqlSessionFactory" ref="sqlSessionFactory" /> </bean> -->
		
	<!-- MapperScannerConfigurer会查找类路径下的映射器，并自动将它们创建成MapperFactoryBean，之后自动装配（将会优先于HibernateImpl) -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage"
			value="com.mascot.campuscloud.dao" />
		<property name="sqlSessionFactoryBeanName"
			value="sqlSessionFactory"></property>
	</bean>

	<!-- 配置事务管理器 -->
	<tx:annotation-driven proxy-target-class="false"
		transaction-manager="dataSourceTransactionManager" />
	<!-- TransactionManager for MyBatis -->
	<bean id="dataSourceTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- TransactionManager for Hibernate <bean id="hibernateTransactionManager" 
		class="org.springframework.orm.hibernate5.HibernateTransactionManager"> <property 
		name="sessionFactory" ref="sessionFactory"></property> <property name="dataSource" 
		ref="dataSource"></property> </bean> -->
</beans>